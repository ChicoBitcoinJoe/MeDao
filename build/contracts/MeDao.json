{
  "contractName": "MeDao",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "name": "_shareToken",
          "type": "address"
        },
        {
          "name": "_maxTokenSupply",
          "type": "uint256"
        },
        {
          "name": "_baseShareValue",
          "type": "uint256"
        },
        {
          "name": "_useBaseValue",
          "type": "bool"
        }
      ],
      "name": "setupMoneyPool",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "reserveClaim",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "reserveAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateShareClaim",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onTransfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxTokenSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "shareToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseShareValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "useBaseValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockInitialized",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateReserveClaim",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reserveAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "name": "shareClaim",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collectedTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "onApprove",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "proxyPayment",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "collectedAmount",
          "type": "uint256"
        }
      ],
      "name": "Collect_event",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "msgSender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reserveAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "shareClaim",
          "type": "uint256"
        }
      ],
      "name": "Deposit_event",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "msgSender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reserveClaim",
          "type": "uint256"
        }
      ],
      "name": "Withdraw_event",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "reserveAmount",
          "type": "uint256"
        }
      ],
      "name": "Transfer_event",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "Issue_event",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "shareAmount",
          "type": "uint256"
        }
      ],
      "name": "Destroy_event",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_reserveToken",
          "type": "address"
        },
        {
          "name": "_shareToken",
          "type": "address"
        },
        {
          "name": "_maxTokenSupply",
          "type": "uint256"
        },
        {
          "name": "_baseShareValue",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "elapsedSeconds",
          "type": "uint256"
        }
      ],
      "name": "calculateWorkTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "collectFunds",
      "outputs": [
        {
          "name": "collectedFunds",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_reserveToken\",\"type\":\"address\"},{\"name\":\"_shareToken\",\"type\":\"address\"},{\"name\":\"_maxTokenSupply\",\"type\":\"uint256\"},{\"name\":\"_baseShareValue\",\"type\":\"uint256\"},{\"name\":\"_useBaseValue\",\"type\":\"bool\"}],\"name\":\"setupMoneyPool\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"name\":\"reserveClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"reserveAmount\",\"type\":\"uint256\"}],\"name\":\"calculateShareClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onTransfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxTokenSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"collectFunds\",\"outputs\":[{\"name\":\"collectedFunds\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"shareToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseShareValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"useBaseValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockInitialized\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"calculateReserveClaim\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"reserveAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"name\":\"shareClaim\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collectedTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"elapsedSeconds\",\"type\":\"uint256\"}],\"name\":\"calculateWorkTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"onApprove\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_reserveToken\",\"type\":\"address\"},{\"name\":\"_shareToken\",\"type\":\"address\"},{\"name\":\"_maxTokenSupply\",\"type\":\"uint256\"},{\"name\":\"_baseShareValue\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"proxyPayment\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"collectedAmount\",\"type\":\"uint256\"}],\"name\":\"Collect_event\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reserveAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"shareClaim\",\"type\":\"uint256\"}],\"name\":\"Deposit_event\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"msgSender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reserveClaim\",\"type\":\"uint256\"}],\"name\":\"Withdraw_event\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"reserveAmount\",\"type\":\"uint256\"}],\"name\":\"Transfer_event\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"Issue_event\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"shareAmount\",\"type\":\"uint256\"}],\"name\":\"Destroy_event\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MeDao.sol\":\"MeDao\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/Interfaces.sol\":{\"keccak256\":\"0x0ac6ba6c5bf2b2953458a6fff97e8e82a4ebf83f0e0260887e659770ba26af05\",\"urls\":[\"bzzr://d64d891c62176dd19a97eca06cd112e4c809047fae72efaa01363524d2ab719c\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MeDao.sol\":{\"keccak256\":\"0xb264c8fe34a68efe449bf71a5e1d2dea5ae72cbb995aea7c80fd9791a6ba7836\",\"urls\":[\"bzzr://e6e9254eb07d209b403cb14703c1e65b9b85876ea52992c2e3f68aea3f7bba6f\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MoneyPool.sol\":{\"keccak256\":\"0x3b83e6b09c05b7db77c0ed8de53bf8b332a307badb9d479ed34520db62457a89\",\"urls\":[\"bzzr://5164ba3f7b9ddb447e9095bf32aa04171da03ccae5497a162db97018730e7578\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/CloneFactory.sol\":{\"keccak256\":\"0x4d4a655debae361e033fb51438c2a2cf0c6823976a0041245ce1fec0414708fd\",\"urls\":[\"bzzr://4545375d08308ef3d2cb3b25b572af503553f814208df987df8d206bb7e3b13a\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/ERC20Token.sol\":{\"keccak256\":\"0x13124564ed57c260987765593adeb6821fe1ca9b384fee9dea7a094834633a6d\",\"urls\":[\"bzzr://ef17cd60f48bea8e5c519b75606816ce9cdec4d5e311eb09c4a47a3bf6a285f6\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/MiniMeToken.sol\":{\"keccak256\":\"0x5937d571cabe2806672e06abb894714d071d89e7c857256e2b31029829799ff2\",\"urls\":[\"bzzr://03d3116d40db1746615d25ba90c62931a87141522e88406bd012c01918a31f4b\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/Owned.sol\":{\"keccak256\":\"0x895a3793732819c660a20c3572a65838204a698633445220dace5284c282022a\",\"urls\":[\"bzzr://fbf22e09ce9cde6dabc2ad6afce37d69f082860b192c17b4bfb15ad3d6b21e95\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/helpers/Initialized.sol\":{\"keccak256\":\"0x9a4e7561d58e2136efc314ad8ba124cef32db7b30b4107cd5f4180d839d337dc\",\"urls\":[\"bzzr://e46d92d4abcb7ade9338fd52020fcfe328e4b45f88296b66ec172b228f993cd1\"]},\"/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/helpers/SimpleTokenController.sol\":{\"keccak256\":\"0x3eb12e6ddd56d0009d2ad3426e1e638007985c843727273f0e89d54e41b493be\",\"urls\":[\"bzzr://64df8ce41a3134518ab13d2ba59502fc5f012e5cb51a4994b358612fab6347f9\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c80639bc40c4c116100a0578063da682aeb11610064578063da682aeb14610587578063eb990c591461061a578063f2fde38b1461069f578063f4325d67146106f0578063f48c3054146107475761011f565b80639bc40c4c14610444578063b163ecd21461046f578063b6b55f25146104be578063c65ad5411461050d578063cb29b1c5146105385761011f565b80635b980628116100e75780635b980628146103115780636c9fa59e1461033c578063761537ad146103935780638da5cb5b146103be57806395a1e303146104155761011f565b8063071e899a146101245780632e1a7d4d146101b5578063327ca4a8146102045780634a3931491461025357806350f7c204146102e6575b600080fd5b34801561013057600080fd5b506101b3600480360360a081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035151590602001909291905050506107a3565b005b3480156101c157600080fd5b506101ee600480360360208110156101d857600080fd5b810190808035906020019092919050505061086a565b6040518082815260200191505060405180910390f35b34801561021057600080fd5b5061023d6004803603602081101561022757600080fd5b8101908080359060200190929190505050610b9b565b6040518082815260200191505060405180910390f35b34801561025f57600080fd5b506102cc6004803603606081101561027657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e42565b604051808215151515815260200191505060405180910390f35b3480156102f257600080fd5b506102fb610e4f565b6040518082815260200191505060405180910390f35b34801561031d57600080fd5b50610326610e55565b6040518082815260200191505060405180910390f35b34801561034857600080fd5b50610351611048565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039f57600080fd5b506103a861106e565b6040518082815260200191505060405180910390f35b3480156103ca57600080fd5b506103d3611074565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042157600080fd5b5061042a611099565b604051808215151515815260200191505060405180910390f35b34801561045057600080fd5b506104596110ac565b6040518082815260200191505060405180910390f35b34801561047b57600080fd5b506104a86004803603602081101561049257600080fd5b81019080803590602001909291905050506110b2565b6040518082815260200191505060405180910390f35b3480156104ca57600080fd5b506104f7600480360360208110156104e157600080fd5b8101908080359060200190929190505050611242565b6040518082815260200191505060405180910390f35b34801561051957600080fd5b506105226116c8565b6040518082815260200191505060405180910390f35b34801561054457600080fd5b506105716004803603602081101561055b57600080fd5b81019080803590602001909291905050506116ce565b6040518082815260200191505060405180910390f35b34801561059357600080fd5b50610600600480360360608110156105aa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506116ef565b604051808215151515815260200191505060405180910390f35b34801561062657600080fd5b5061069d6004803603608081101561063d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506116fc565b005b3480156106ab57600080fd5b506106ee600480360360208110156106c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061172d565b005b3480156106fc57600080fd5b50610705611832565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107896004803603602081101561075d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611858565b604051808215151515815260200191505060405180910390f35b6000600154146107b257600080fd5b84600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826008819055508160098190555080600a60006101000a81548160ff021916908315150217905550436001819055505050505050565b6000610875826110b2565b9050600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d3ce77fe33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561092057600080fd5b505af1158015610934573d6000803e3d6000fd5b505050506040513d602081101561094a57600080fd5b81019080805190602001909291905050506109cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f6661696c656420746f2064657374726f7920746f6b656e73000000000000000081525060200191505060405180910390fd5b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a7657600080fd5b505af1158015610a8a573d6000803e3d6000fd5b505050506040513d6020811015610aa057600080fd5b8101908080519060200190929190505050610b23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6661696c656420746f207472616e73666572000000000000000000000000000081525060200191505060405180910390fd5b7ffc66b0b1bed0c04059e1367b6de8a81a90429a81bc9ba512980aad725fb5632c338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a1919050565b6000600a60009054906101000a900460ff1680610c9157506000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c5457600080fd5b505afa158015610c68573d6000803e3d6000fd5b505050506040513d6020811015610c7e57600080fd5b8101908080519060200190929190505050145b15610cb357600954670de0b6b3a7640000830281610cab57fe5b049050610e3d565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d5257600080fd5b505afa158015610d66573d6000803e3d6000fd5b505050506040513d6020811015610d7c57600080fd5b810190808051906020019092919050505082600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df657600080fd5b505afa158015610e0a573d6000803e3d6000fd5b505050506040513d6020811015610e2057600080fd5b81019080805190602001909291905050500281610e3957fe5b0490505b919050565b6000600190509392505050565b60085481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f19576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6d73672073656e646572206973206e6f74206f776e657200000000000000000081525060200191505060405180910390fd5b6000600b54420390506000610f2d826116ce565b9050600854600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9a57600080fd5b505afa158015610fae573d6000803e3d6000fd5b505050506040513d6020811015610fc457600080fd5b8101908080519060200190929190505050820281610fde57fe5b04925061100c6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684611862565b7fa21cd14946039cdfc580e41550837d39a3d20e9736124610d1814f0ca157f86e836040518082815260200191505060405180910390a1505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60095481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900460ff1681565b60015481565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561111c57600080fd5b505afa158015611130573d6000803e3d6000fd5b505050506040513d602081101561114657600080fd5b810190808051906020019092919050505082600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156111f757600080fd5b505afa15801561120b573d6000803e3d6000fd5b505050506040513d602081101561122157600080fd5b8101908080519060200190929190505050028161123a57fe5b049050919050565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156112ad57600080fd5b505afa1580156112c1573d6000803e3d6000fd5b505050506040513d60208110156112d757600080fd5b81019080805190602001909291905050506008540390506112f783610b9b565b91508181101561136f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f696e76616c6964207265736572766520616d6f756e740000000000000000000081525060200191505060405180910390fd5b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050506040513d602081101561147657600080fd5b81019080805190602001909291905050506114f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6661696c656420746f207472616e73666572000000000000000000000000000081525060200191505060405180910390fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663827f32c033846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156115a257600080fd5b505af11580156115b6573d6000803e3d6000fd5b505050506040513d60208110156115cc57600080fd5b810190808051906020019092919050505061164f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6661696c656420746f2067656e657261746520746f6b656e730000000000000081525060200191505060405180910390fd5b7f48ac3b6d8a059a533cd86121b6616d2b78cc16910bc22eafff12e1f166591a22338484604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150919050565b600b5481565b600060a86028670de0b6b3a7640000840202816116e757fe5b049050919050565b6000600190509392505050565b60006001541461170b57600080fd5b42600b819055506117208484848460006107a3565b4360018190555050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f6d73672073656e646572206973206e6f74206f776e657200000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663827f32c083836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561190b57600080fd5b505af115801561191f573d6000803e3d6000fd5b505050506040513d602081101561193557600080fd5b810190808051906020019092919050505061194f57600080fd5b806008600082825401925050819055507ffb82d8e745091d2d2020311ee7db0d74371569f79ab4247f0b268dfef2e9a69f8282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a1505056fea165627a7a72305820e85c89eefbe52a6027546a50f317faf7dfef436d2957cbbd0335a4fc49121d2c0029",
  "sourceMap": "117:1016:2:-;;;114:10:11;106:5;;:18;;;;;;;;;;;;;;;;;;117:1016:2;;;;;;",
  "deployedSourceMap": "117:1016:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;568:402:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;568:402:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;568:402:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2082:390;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2082:390:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2082:390:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;976:354;;8:9:-1;5:2;;;30:1;27;20:12;5:2;976:354:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;976:354:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;242:141:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;242:141:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;242:141:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;311:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:26:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;776:354:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;776:354:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;229:29:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;229:29:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;399:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;399:26:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;47:20:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47:20:11;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;479:24:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;479:24:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;53:28:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53:28:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1336:179:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:179:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1336:179:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1521:555;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1521:555:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1521:555:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;165:30:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:30:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;635:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;635:135:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;635:135:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;389:152:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:152:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;389:152:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;254:375:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;254:375:2;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;254:375:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;248:95:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;248:95:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;248:95:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;144:30:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;144:30:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;123:113:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;123:113:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;568:402:4;146:1:12;126:16;;:21;118:30;;;;;;794:13:4;779:12;;:28;;;;;;;;;;;;;;;;;;830:11;817:10;;:24;;;;;;;;;;;;;;;;;;868:15;851:14;:32;;;;910:15;893:14;:32;;;;950:13;935:12;;:28;;;;;;;;;;;;;;;;;;188:12:12;169:16;:31;;;;568:402:4;;;;;:::o;2082:390::-;2135:17;2179:34;2201:11;2179:21;:34::i;:::-;2164:49;;2231:10;;;;;;;;;;;:24;;;2256:10;2268:11;2231:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2231:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2231:49:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2231:49:4;;;;;;;;;;;;;;;;2223:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2327:12;;;;;;;;;;;:21;;;2349:10;2361:12;2327:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2327:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2327:47:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2327:47:4;;;;;;;;;;;;;;;;2319:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2412:53;2427:10;2439:11;2452:12;2412:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:390;;;:::o;976:354::-;1047:4;1066:12;;;;;;;;;;;:58;;;;1123:1;1082:12;;;;;;;;;;;:22;;;1113:4;1082:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1082:37:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1082:37:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1082:37:4;;;;;;;;;;;;;;;;:42;1066:58;1063:261;;;1173:14;;1163:7;1147:13;:23;:40;;;;;;1140:47;;;;1063:261;1276:12;;;;;;;;;;;:22;;;1307:4;1276:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1276:37:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1276:37:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1276:37:4;;;;;;;;;;;;;;;;1260:13;1233:10;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1233:24:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1233:24:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1233:24:4;;;;;;;;;;;;;;;;:40;:80;;;;;;1226:87;;976:354;;;;:::o;242:141:13:-;320:4;372;365:11;;242:141;;;;;:::o;311:26:4:-;;;;:::o;776:354:2:-;827:19;191:5:11;;;;;;;;;;;177:19;;:10;:19;;;169:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;857:19:2;885:18;;879:3;:24;857:46;;913:13;929:33;947:14;929:17;:33::i;:::-;913:49;;1027:14;;1000:10;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:24:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1000:24:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1000:24:2;;;;;;;;;;;;;;;;989:8;:35;:52;;;;;;972:69;;1051:28;1057:5;;;;;;;;;;;1064:14;1051:5;:28::i;:::-;1094:29;1108:14;1094:29;;;;;;;;;;;;;;;;;;234:1:11;;776:354:2;:::o;229:29:4:-;;;;;;;;;;;;;:::o;399:26::-;;;;:::o;47:20:11:-;;;;;;;;;;;;;:::o;479:24:4:-;;;;;;;;;;;;;:::o;53:28:12:-;;;;:::o;1336:179:4:-;1407:4;1484:10;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1484:24:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1484:24:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1484:24:4;;;;;;;;;;;;;;;;1470:11;1430:12;;;;;;;;;;;:22;;;1461:4;1430:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1430:37:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1430:37:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1430:37:4;;;;;;;;;;;;;;;;:51;:78;;;;;;1423:85;;1336:179;;;:::o;1521:555::-;1575:15;1602:20;1642:10;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:24:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1642:24:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1642:24:4;;;;;;;;;;;;;;;;1625:14;;:41;1602:64;;1689:34;1709:13;1689:19;:34::i;:::-;1676:47;;1760:10;1741:15;:29;;1733:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1815:12;;;;;;;;;;;:25;;;1841:10;1861:4;1868:13;1815:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1815:67:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1815:67:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1815:67:4;;;;;;;;;;;;;;;;1807:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1923:10;;;;;;;;;;;:25;;;1949:10;1961;1923:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1923:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1923:49:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1923:49:4;;;;;;;;;;;;;;;;1915:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2017:52;2031:10;2043:13;2058:10;2017:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1521:555;;;;:::o;165:30:2:-;;;;:::o;635:135::-;705:4;760:3;755:2;745:7;728:14;:24;:29;:35;;;;;;721:42;;635:135;;;:::o;389:152:13:-;472:4;530;523:11;;389:152;;;;;:::o;254:375:2:-;146:1:12;126:16;;:21;118:30;;;;;;454:3:2;433:18;:24;;;;468:154;497:13;524:11;549:15;578;607:5;468:14;:154::i;:::-;188:12:12;169:16;:31;;;;254:375:2;;;;:::o;248:95:11:-;191:5;;;;;;;;;;;177:19;;:10;:19;;;169:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;328:8;320:5;;:16;;;;;;;;;;;;;;;;;;248:95;:::o;144:30:4:-;;;;;;;;;;;;;:::o;123:113:13:-;185:4;224:5;217:12;;123:113;;;:::o;2673:220:4:-;2751:10;;;;;;;;;;;:25;;;2777:7;2786:11;2751:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2751:47:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2751:47:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2751:47:4;;;;;;;;;;;;;;;;2743:56;;;;;;2827:11;2809:14;;:29;;;;;;;;;;;2853:33;2865:7;2874:11;2853:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:220;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./external/CloneFactory.sol\";\nimport \"./MoneyPool.sol\";\nimport \"./Interfaces.sol\";\n\ncontract MeDao is IFundraiser, MoneyPool {\n\n    uint public collectedTimestamp; // The timestamp when a paycheck was last collected\n\n    function initialize (\n        ERC20Token _reserveToken,\n        MiniMeToken _shareToken,\n        uint _maxTokenSupply,\n        uint _baseShareValue\n    ) public runOnce {\n        collectedTimestamp = now;\n\n        setupMoneyPool (\n            _reserveToken,\n            _shareToken,\n            _maxTokenSupply,\n            _baseShareValue,\n            false\n        );\n    }\n\n    function calculateWorkTime (uint elapsedSeconds) public pure returns (uint) {\n        return elapsedSeconds * 1 ether * 40 / 168;\n    }\n\n    function collectFunds () public onlyOwner returns (uint collectedFunds){\n        uint elapsedSeconds = now - collectedTimestamp;\n        uint workTime = calculateWorkTime(elapsedSeconds);\n        collectedFunds = workTime * shareToken.totalSupply() / maxTokenSupply;\n        issue(owner, collectedFunds);\n        emit Collect_event(collectedFunds);\n    }\n\n}\n\ncontract MeDaoFactory is CloneFactory {\n\n    MeDao public blueprint;\n    MiniMeTokenFactory factory;\n\n    mapping (address => bool) public created;\n\n    function create (\n        ERC20Token reserveToken,\n        string memory name,\n        uint maxTokenSupply,\n        uint baseShareValue\n    ) public returns (MeDao medao) {\n        MiniMeToken shareToken = factory.createCloneToken(\n            address(0x0),\n            0,\n            name,\n            18,\n            'seconds',\n            true\n        );\n\n        medao = MeDao(createClone(address(blueprint)));\n        medao.initialize(\n            reserveToken,\n            shareToken,\n            maxTokenSupply,\n            baseShareValue\n        );\n\n        created[address(medao)] = true;\n    }\n\n}\n\n/*\ncontract MeDao is Owned, SimpleTokenController {\n\n    address public factory;         // The factory that deployed this contract\n    uint public blockInitialized;   // The block this contract was initialized\n\n    ERC20Token public reserveToken; // A reserve token to hold the value of a person\n    MiniMeToken public shareToken;  // A cloneable token that represents a share of a person\n    uint public desiredWage;        // How much the owner desires to earn per second worked\n    uint public maxTokenSupply;     // The maximum amount of shares that can be created\n    uint public burnedTokenSupply;  // The maximum amount of shares that can be created\n    uint public collectedTimestamp; // The timestamp when a paycheck was last collected\n\n    constructor () public {\n        blockInitialized = block.number;\n    }\n\n    function initialize (\n        address _owner,\n        ERC20Token _reserveToken,\n        MiniMeToken _shareToken,\n        uint _fundraiserGoal,\n        uint _fundraiserDuration\n    ) public {\n        require(blockInitialized == 0, \"contract already initialized\");\n\n        blockInitialized = block.number;\n\n        owner = _owner;\n        reserveToken = _reserveToken;\n        shareToken = _shareToken;\n        collectedTimestamp = now;\n\n        desiredWage = _fundraiserGoal / _fundraiserDuration;\n        maxTokenSupply = _fundraiserDuration * 1 ether;\n        collectedTimestamp = now;\n    }\n\n    function calculateTimeClaim (uint daiAmount) public view returns (uint) {\n        return shareToken.totalSupply() * daiAmount / reserveToken.balanceOf(address(this));\n    }\n\n    function calculateDaiClaim (uint timeAmount) public view returns (uint) {\n        return reserveToken.balanceOf(address(this)) * timeAmount / shareToken.totalSupply();\n    }\n\n    function calculateWorkTime (uint elapsedSeconds) public pure returns (uint) {\n        return elapsedSeconds * 1 ether * 40 / 168;\n    }\n\n    function collectFunds () public onlyOwner returns (uint collectedFunds){\n        uint elapsedSeconds = now - collectedTimestamp;\n        uint workTime = calculateWorkTime(elapsedSeconds);\n        uint fundedTime = workTime * shareToken.totalSupply() / maxTokenSupply;\n        collectedFunds = calculateDaiClaim(fundedTime);\n        require(reserveToken.transfer(owner, collectedFunds), 'failed to transfer');\n        collectedTimestamp = now;\n        emit Pay_event(fundedTime, collectedFunds);\n    }\n\n    function deposit (uint daiAmount) public {\n        uint availableSeconds = maxTokenSupply - shareToken.totalSupply();\n        uint claimedTime = calculateTimeClaim(daiAmount);\n        require(availableSeconds >= claimedTime, \"invalid reserve amount\");\n        require(reserveToken.transferFrom(msg.sender, address(this), daiAmount), \"failed to transfer\");\n        require(shareToken.generateTokens(msg.sender, claimedTime), \"failed to generate tokens\");\n        emit ConvertDai_event(msg.sender, daiAmount, claimedTime);\n    }\n\n    function withdraw (uint timeAmount) public {\n        uint daiClaim = calculateDaiClaim(timeAmount);\n        require(shareToken.destroyTokens(msg.sender, timeAmount), \"failed to destroy tokens\");\n        require(reserveToken.transfer(msg.sender, daiClaim), \"failed to transfer\");\n        emit ConvertTime_event(msg.sender, timeAmount, daiClaim);\n    }\n\n    function burn (uint timeAmount) public {\n        require(shareToken.destroyTokens(msg.sender, timeAmount), \"failed to burn tokens\");\n        maxTokenSupply -= timeAmount;\n        burnedTokenSupply += timeAmount;\n        emit Burn_event(msg.sender, timeAmount);\n    }\n\n    event Pay_event (uint timeAmount, uint daiAmount);\n    event ConvertDai_event (address msgSender, uint daiAmount, uint timeAmount);\n    event ConvertTime_event (address msgSender, uint timeAmount, uint daiAmount);\n    event Burn_event (address msgSender, uint timeAmount);\n    event NewHash_event (string newHash);\n\n}\n\ncontract MeDaoFactory is CloneFactory {\n\n    address public blueprint;\n    ERC20Token public dai;\n    MiniMeTokenFactory factory;\n\n    mapping (address => bool) public created;\n    mapping (address => MeDao) public registry;\n\n    constructor (\n        address _blueprint,\n        ERC20Token _dai,\n        MiniMeTokenFactory _factory\n    ) public {\n        blueprint = _blueprint;\n        dai = _dai;\n        factory = _factory;\n    }\n\n    function create (\n        string memory name,\n        //int birthTimestamp,\n        uint tokenClaim,\n        uint initialReserve\n    ) public returns (MeDao medao) {\n        require(address(registry[msg.sender]) == address(0x0));\n        require(initialReserve > 0);\n        require(tokenClaim > 0);\n\n        MiniMeToken timeToken = factory.createCloneToken(\n            address(0x0),\n            0,\n            name,\n            18,\n            'seconds',\n            true\n        );\n\n        medao = MeDao(createClone(blueprint));\n        created[address(medao)] = true;\n        timeToken.changeController(address(medao));\n        require(dai.transferFrom(msg.sender, address(medao), initialReserve));\n        //medao.initialize(msg.sender, dai, timeToken, birthTimestamp, tokenClaim);\n\n        registry[msg.sender] = medao;\n        emit Register_event(msg.sender, medao);\n    }\n\n    event Register_event (address indexed owner, MeDao medao);\n}\n*/\n",
  "sourcePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MeDao.sol",
  "ast": {
    "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MeDao.sol",
    "exportedSymbols": {
      "MeDao": [
        583
      ],
      "MeDaoFactory": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 492,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/CloneFactory.sol",
        "file": "./external/CloneFactory.sol",
        "id": 493,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1629,
        "src": "25:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MoneyPool.sol",
        "file": "./MoneyPool.sol",
        "id": 494,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1032,
        "src": "63:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 495,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 491,
        "src": "89:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 496,
              "name": "IFundraiser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 409,
              "src": "135:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFundraiser_$409",
                "typeString": "contract IFundraiser"
              }
            },
            "id": 497,
            "nodeType": "InheritanceSpecifier",
            "src": "135:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 498,
              "name": "MoneyPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1031,
              "src": "148:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MoneyPool_$1031",
                "typeString": "contract MoneyPool"
              }
            },
            "id": 499,
            "nodeType": "InheritanceSpecifier",
            "src": "148:9:2"
          }
        ],
        "contractDependencies": [
          399,
          409,
          1031,
          1764,
          2846,
          2866,
          2924
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 583,
        "linearizedBaseContracts": [
          583,
          1031,
          409,
          399,
          2924,
          1764,
          2866,
          2846
        ],
        "name": "MeDao",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 501,
            "name": "collectedTimestamp",
            "nodeType": "VariableDeclaration",
            "scope": 583,
            "src": "165:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 500,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "423:206:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "collectedTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "433:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 515,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "454:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "433:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "433:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "_reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "497:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "_shareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "524:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "_maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "549:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "_baseShareValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "578:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "607:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 518,
                      "name": "setupMoneyPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "468:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Token_$1697_$_t_contract$_MiniMeToken_$2765_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (contract ERC20Token,contract MiniMeToken,uint256,uint256,bool)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:154:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "468:154:2"
                }
              ]
            },
            "documentation": null,
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 511,
                  "name": "runOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2865,
                  "src": "415:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:7:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "_reserveToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "284:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$1697",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 502,
                    "name": "ERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1697,
                    "src": "284:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1697",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "name": "_shareToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "318:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                    "typeString": "contract MiniMeToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 504,
                    "name": "MiniMeToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2765,
                    "src": "318:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                      "typeString": "contract MiniMeToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "name": "_maxTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "351:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "name": "_baseShareValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "381:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:133:2"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:2"
            },
            "scope": 583,
            "src": "254:375:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "711:59:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 534,
                          "name": "elapsedSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "728:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "745:7:2",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "728:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "755:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      },
                      "src": "728:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313638",
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "760:3:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_168_by_1",
                        "typeString": "int_const 168"
                      },
                      "value": "168"
                    },
                    "src": "728:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 533,
                  "id": 541,
                  "nodeType": "Return",
                  "src": "721:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWorkTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "name": "elapsedSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "663:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:21:2"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "705:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:6:2"
            },
            "scope": 583,
            "src": "635:135:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "847:283:2",
              "statements": [
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "name": "elapsedSeconds",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "857:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "857:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 555,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "879:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 553,
                      "name": "collectedTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "885:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "879:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "857:46:2"
                },
                {
                  "assignments": [
                    557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 557,
                      "name": "workTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "913:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 556,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 561,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "elapsedSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "947:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 558,
                      "name": "calculateWorkTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "929:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "913:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "collectedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "972:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "workTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "989:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 564,
                              "name": "shareToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "1000:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                                "typeString": "contract MiniMeToken"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2200,
                            "src": "1000:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1000:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "989:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "1027:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "989:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "972:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "972:69:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "1057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 574,
                        "name": "collectedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "1064:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 572,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        967
                      ],
                      "referencedDeclaration": 967,
                      "src": "1051:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:28:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "collectedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "1108:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 577,
                      "name": "Collect_event",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "1094:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "EmitStatement",
                  "src": "1089:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 545,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2833,
                  "src": "808:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "808:9:2"
              }
            ],
            "name": "collectFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:2"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "name": "collectedFunds",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "827:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:21:2"
            },
            "scope": 583,
            "src": "776:354:2",
            "stateMutability": "nonpayable",
            "superFunction": 408,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "117:1016:2"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 584,
              "name": "CloneFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1628,
              "src": "1160:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CloneFactory_$1628",
                "typeString": "contract CloneFactory"
              }
            },
            "id": 585,
            "nodeType": "InheritanceSpecifier",
            "src": "1160:12:2"
          }
        ],
        "contractDependencies": [
          1628
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649,
          1628
        ],
        "name": "MeDaoFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 587,
            "name": "blueprint",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1180:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MeDao_$583",
              "typeString": "contract MeDao"
            },
            "typeName": {
              "contractScope": null,
              "id": 586,
              "name": "MeDao",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 583,
              "src": "1180:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MeDao_$583",
                "typeString": "contract MeDao"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 589,
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1208:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
              "typeString": "contract MiniMeTokenFactory"
            },
            "typeName": {
              "contractScope": null,
              "id": 588,
              "name": "MiniMeTokenFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2808,
              "src": "1208:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
                "typeString": "contract MiniMeTokenFactory"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 593,
            "name": "created",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1241:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 592,
              "keyType": {
                "id": 590,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1250:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 591,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1261:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1459:432:2",
              "statements": [
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "name": "shareToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 647,
                      "src": "1469:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                        "typeString": "contract MiniMeToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 606,
                        "name": "MiniMeToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2765,
                        "src": "1469:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 619,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1540:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "1573:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7365636f6e6473",
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:9:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1130af6d7c17bab477e8229ba4562e6c6de1a24d5f06f81ba647253be54326f",
                          "typeString": "literal_string \"seconds\""
                        },
                        "value": "seconds"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1630:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1130af6d7c17bab477e8229ba4562e6c6de1a24d5f06f81ba647253be54326f",
                          "typeString": "literal_string \"seconds\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "1494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
                          "typeString": "contract MiniMeTokenFactory"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCloneToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2807,
                      "src": "1494:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$_t_string_memory_ptr_$_t_uint8_$_t_string_memory_ptr_$_t_bool_$returns$_t_contract$_MiniMeToken_$2765_$",
                        "typeString": "function (address payable,uint256,string memory,uint8,string memory,bool) external returns (contract MiniMeToken)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:150:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                      "typeString": "contract MiniMeToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1469:175:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "medao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1655:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeDao_$583",
                        "typeString": "contract MeDao"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 624,
                                  "name": "blueprint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 587,
                                  "src": "1689:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MeDao_$583",
                                    "typeString": "contract MeDao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MeDao_$583",
                                    "typeString": "contract MeDao"
                                  }
                                ],
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1681:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1681:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 622,
                            "name": "createClone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "1669:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 621,
                        "name": "MeDao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1663:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MeDao_$583_$",
                          "typeString": "type(contract MeDao)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1663:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeDao_$583",
                        "typeString": "contract MeDao"
                      }
                    },
                    "src": "1655:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MeDao_$583",
                      "typeString": "contract MeDao"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:46:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "1741:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 634,
                        "name": "shareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1767:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1791:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "baseShareValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1819:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "medao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1711:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeDao_$583",
                          "typeString": "contract MeDao"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 527,
                      "src": "1711:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20Token_$1697_$_t_contract$_MiniMeToken_$2765_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20Token,contract MiniMeToken,uint256,uint256) external"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:132:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:132:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "created",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "1854:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 641,
                            "name": "medao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 604,
                            "src": "1870:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MeDao_$583",
                              "typeString": "contract MeDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MeDao_$583",
                              "typeString": "contract MeDao"
                            }
                          ],
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1862:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1862:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1854:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1880:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1854:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "name": "reserveToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1314:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$1697",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 594,
                    "name": "ERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1697,
                    "src": "1314:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1697",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1347:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "name": "maxTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1375:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "name": "baseShareValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1404:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:125:2"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "name": "medao",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1446:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MeDao_$583",
                    "typeString": "contract MeDao"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 603,
                    "name": "MeDao",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 583,
                    "src": "1446:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MeDao_$583",
                      "typeString": "contract MeDao"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1445:13:2"
            },
            "scope": 649,
            "src": "1288:603:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "1135:759:2"
      }
    ],
    "src": "0:7194:2"
  },
  "legacyAST": {
    "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MeDao.sol",
    "exportedSymbols": {
      "MeDao": [
        583
      ],
      "MeDaoFactory": [
        649
      ]
    },
    "id": 650,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 492,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/external/CloneFactory.sol",
        "file": "./external/CloneFactory.sol",
        "id": 493,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1629,
        "src": "25:37:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/MoneyPool.sol",
        "file": "./MoneyPool.sol",
        "id": 494,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 1032,
        "src": "63:25:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/joe/Documents/github/chicobitcoinjoe/medao/contracts/Interfaces.sol",
        "file": "./Interfaces.sol",
        "id": 495,
        "nodeType": "ImportDirective",
        "scope": 650,
        "sourceUnit": 491,
        "src": "89:26:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 496,
              "name": "IFundraiser",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 409,
              "src": "135:11:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFundraiser_$409",
                "typeString": "contract IFundraiser"
              }
            },
            "id": 497,
            "nodeType": "InheritanceSpecifier",
            "src": "135:11:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 498,
              "name": "MoneyPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1031,
              "src": "148:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MoneyPool_$1031",
                "typeString": "contract MoneyPool"
              }
            },
            "id": 499,
            "nodeType": "InheritanceSpecifier",
            "src": "148:9:2"
          }
        ],
        "contractDependencies": [
          399,
          409,
          1031,
          1764,
          2846,
          2866,
          2924
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 583,
        "linearizedBaseContracts": [
          583,
          1031,
          409,
          399,
          2924,
          1764,
          2866,
          2846
        ],
        "name": "MeDao",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 501,
            "name": "collectedTimestamp",
            "nodeType": "VariableDeclaration",
            "scope": 583,
            "src": "165:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 500,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "165:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "423:206:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 514,
                      "name": "collectedTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "433:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 515,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "454:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "433:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "433:24:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "_reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "497:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 520,
                        "name": "_shareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 505,
                        "src": "524:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 521,
                        "name": "_maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "549:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 522,
                        "name": "_baseShareValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 509,
                        "src": "578:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "607:5:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 518,
                      "name": "setupMoneyPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 760,
                      "src": "468:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Token_$1697_$_t_contract$_MiniMeToken_$2765_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (contract ERC20Token,contract MiniMeToken,uint256,uint256,bool)"
                      }
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "468:154:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 525,
                  "nodeType": "ExpressionStatement",
                  "src": "468:154:2"
                }
              ]
            },
            "documentation": null,
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 512,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 511,
                  "name": "runOnce",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2865,
                  "src": "415:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "415:7:2"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "name": "_reserveToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "284:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$1697",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 502,
                    "name": "ERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1697,
                    "src": "284:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1697",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 505,
                  "name": "_shareToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "318:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                    "typeString": "contract MiniMeToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 504,
                    "name": "MiniMeToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2765,
                    "src": "318:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                      "typeString": "contract MiniMeToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 507,
                  "name": "_maxTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "351:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 509,
                  "name": "_baseShareValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "381:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "274:133:2"
            },
            "returnParameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:0:2"
            },
            "scope": 583,
            "src": "254:375:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 542,
              "nodeType": "Block",
              "src": "711:59:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 534,
                          "name": "elapsedSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "728:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "745:7:2",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "728:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3430",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "755:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_40_by_1",
                          "typeString": "int_const 40"
                        },
                        "value": "40"
                      },
                      "src": "728:29:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "313638",
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "760:3:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_168_by_1",
                        "typeString": "int_const 168"
                      },
                      "value": "168"
                    },
                    "src": "728:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 533,
                  "id": 541,
                  "nodeType": "Return",
                  "src": "721:42:2"
                }
              ]
            },
            "documentation": null,
            "id": 543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWorkTime",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 529,
                  "name": "elapsedSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "663:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "663:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "662:21:2"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 543,
                  "src": "705:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "704:6:2"
            },
            "scope": 583,
            "src": "635:135:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "847:283:2",
              "statements": [
                {
                  "assignments": [
                    551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 551,
                      "name": "elapsedSeconds",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "857:19:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 550,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "857:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 555,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "879:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 553,
                      "name": "collectedTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "885:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "879:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "857:46:2"
                },
                {
                  "assignments": [
                    557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 557,
                      "name": "workTime",
                      "nodeType": "VariableDeclaration",
                      "scope": 581,
                      "src": "913:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 556,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "913:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 561,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 559,
                        "name": "elapsedSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 551,
                        "src": "947:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 558,
                      "name": "calculateWorkTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "929:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "929:33:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "913:49:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "collectedFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "972:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 563,
                          "name": "workTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 557,
                          "src": "989:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 564,
                              "name": "shareToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "1000:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                                "typeString": "contract MiniMeToken"
                              }
                            },
                            "id": 565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2200,
                            "src": "1000:22:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1000:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "989:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 568,
                        "name": "maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "1027:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "989:52:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "972:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 571,
                  "nodeType": "ExpressionStatement",
                  "src": "972:69:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 573,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2812,
                        "src": "1057:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 574,
                        "name": "collectedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "1064:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 572,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        967
                      ],
                      "referencedDeclaration": 967,
                      "src": "1051:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:28:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 578,
                        "name": "collectedFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "1108:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 577,
                      "name": "Collect_event",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 996,
                      "src": "1094:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 580,
                  "nodeType": "EmitStatement",
                  "src": "1089:34:2"
                }
              ]
            },
            "documentation": null,
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 546,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 545,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2833,
                  "src": "808:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "808:9:2"
              }
            ],
            "name": "collectFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "798:2:2"
            },
            "returnParameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "name": "collectedFunds",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "827:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "827:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "826:21:2"
            },
            "scope": 583,
            "src": "776:354:2",
            "stateMutability": "nonpayable",
            "superFunction": 408,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "117:1016:2"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 584,
              "name": "CloneFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1628,
              "src": "1160:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CloneFactory_$1628",
                "typeString": "contract CloneFactory"
              }
            },
            "id": 585,
            "nodeType": "InheritanceSpecifier",
            "src": "1160:12:2"
          }
        ],
        "contractDependencies": [
          1628
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 649,
        "linearizedBaseContracts": [
          649,
          1628
        ],
        "name": "MeDaoFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 587,
            "name": "blueprint",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1180:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MeDao_$583",
              "typeString": "contract MeDao"
            },
            "typeName": {
              "contractScope": null,
              "id": 586,
              "name": "MeDao",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 583,
              "src": "1180:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MeDao_$583",
                "typeString": "contract MeDao"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 589,
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1208:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
              "typeString": "contract MiniMeTokenFactory"
            },
            "typeName": {
              "contractScope": null,
              "id": 588,
              "name": "MiniMeTokenFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2808,
              "src": "1208:18:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
                "typeString": "contract MiniMeTokenFactory"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 593,
            "name": "created",
            "nodeType": "VariableDeclaration",
            "scope": 649,
            "src": "1241:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 592,
              "keyType": {
                "id": 590,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1250:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1241:25:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 591,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1261:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 647,
              "nodeType": "Block",
              "src": "1459:432:2",
              "statements": [
                {
                  "assignments": [
                    607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 607,
                      "name": "shareToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 647,
                      "src": "1469:22:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                        "typeString": "contract MiniMeToken"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 606,
                        "name": "MiniMeToken",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2765,
                        "src": "1469:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 619,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1540:3:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1532:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1532:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:1:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "id": 614,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 597,
                        "src": "1573:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:2:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7365636f6e6473",
                        "id": 616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1607:9:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e1130af6d7c17bab477e8229ba4562e6c6de1a24d5f06f81ba647253be54326f",
                          "typeString": "literal_string \"seconds\""
                        },
                        "value": "seconds"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1630:4:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e1130af6d7c17bab477e8229ba4562e6c6de1a24d5f06f81ba647253be54326f",
                          "typeString": "literal_string \"seconds\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 608,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "1494:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeTokenFactory_$2808",
                          "typeString": "contract MiniMeTokenFactory"
                        }
                      },
                      "id": 609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createCloneToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2807,
                      "src": "1494:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$_t_string_memory_ptr_$_t_uint8_$_t_string_memory_ptr_$_t_bool_$returns$_t_contract$_MiniMeToken_$2765_$",
                        "typeString": "function (address payable,uint256,string memory,uint8,string memory,bool) external returns (contract MiniMeToken)"
                      }
                    },
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1494:150:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                      "typeString": "contract MiniMeToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1469:175:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 620,
                      "name": "medao",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 604,
                      "src": "1655:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeDao_$583",
                        "typeString": "contract MeDao"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 624,
                                  "name": "blueprint",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 587,
                                  "src": "1689:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MeDao_$583",
                                    "typeString": "contract MeDao"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MeDao_$583",
                                    "typeString": "contract MeDao"
                                  }
                                ],
                                "id": 623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1681:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1681:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 622,
                            "name": "createClone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "1669:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 621,
                        "name": "MeDao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 583,
                        "src": "1663:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MeDao_$583_$",
                          "typeString": "type(contract MeDao)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1663:38:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeDao_$583",
                        "typeString": "contract MeDao"
                      }
                    },
                    "src": "1655:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MeDao_$583",
                      "typeString": "contract MeDao"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:46:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 633,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 595,
                        "src": "1741:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 634,
                        "name": "shareToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 607,
                        "src": "1767:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 635,
                        "name": "maxTokenSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "1791:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 636,
                        "name": "baseShareValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 601,
                        "src": "1819:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Token_$1697",
                          "typeString": "contract ERC20Token"
                        },
                        {
                          "typeIdentifier": "t_contract$_MiniMeToken_$2765",
                          "typeString": "contract MiniMeToken"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 630,
                        "name": "medao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 604,
                        "src": "1711:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeDao_$583",
                          "typeString": "contract MeDao"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 527,
                      "src": "1711:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20Token_$1697_$_t_contract$_MiniMeToken_$2765_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20Token,contract MiniMeToken,uint256,uint256) external"
                      }
                    },
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:132:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:132:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "created",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "1854:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 641,
                            "name": "medao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 604,
                            "src": "1870:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MeDao_$583",
                              "typeString": "contract MeDao"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MeDao_$583",
                              "typeString": "contract MeDao"
                            }
                          ],
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1862:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1862:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1854:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1880:4:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1854:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "name": "reserveToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1314:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Token_$1697",
                    "typeString": "contract ERC20Token"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 594,
                    "name": "ERC20Token",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1697,
                    "src": "1314:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Token_$1697",
                      "typeString": "contract ERC20Token"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 597,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1347:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 596,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1347:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 599,
                  "name": "maxTokenSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1375:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 601,
                  "name": "baseShareValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1404:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 600,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1404:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1304:125:2"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "name": "medao",
                  "nodeType": "VariableDeclaration",
                  "scope": 648,
                  "src": "1446:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MeDao_$583",
                    "typeString": "contract MeDao"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 603,
                    "name": "MeDao",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 583,
                    "src": "1446:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MeDao_$583",
                      "typeString": "contract MeDao"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1445:13:2"
            },
            "scope": 649,
            "src": "1288:603:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 650,
        "src": "1135:759:2"
      }
    ],
    "src": "0:7194:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-08-06T03:13:26.817Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}